{
  "version": 3,
  "sources": ["../../../src/FeaturesState.tsx", "../../../src/FeatureState.tsx", "../../../src/Features.tsx", "../../../src/EnableContext.tsx", "../../../src/FeatureContext.tsx", "../../../src/useConsoleOverride.tsx", "../../../src/GlobalEnable.tsx", "../../../src/usePersist.tsx", "../../../src/useTestCallback.tsx", "../../../src/testFeature.tsx", "../../../src/Enable.tsx", "../../../src/utils.ts", "../../../src/useAllEnabled.tsx", "../../../src/useEnabled.tsx", "../../../src/Disable.tsx", "../../../src/useAllDisabled.tsx", "../../../src/useDisabled.tsx", "../../../src/ToggleFeatures.tsx"],
  "sourcesContent": ["import { ActorRefFrom, InterpreterFrom, StateFrom, assign, createMachine, spawn } from 'xstate';\n\nimport { FeatureMachine, FeatureDescription, FeatureValue, valueForState } from './FeatureState';\n\nexport interface FeaturesContext {\n  // features are layered:\n  //  - defaults: if nothing else matches, provided a value for feature\n  //  - browser: browser-local values for features (kept in local storage, etc)\n  //  - user: values from the user's profile, if any\n  //  - org: value from the org's profile, if any\n  features: { [x: string]: ActorRefFrom<typeof FeatureMachine> };\n}\n\nexport type FeaturesAction =\n  | { type: 'DE_INIT' }\n  | { type: 'DISABLE'; name: string }\n  | { type: 'ENABLE'; name: string }\n  | { type: 'INIT'; features: readonly FeatureDescription[] }\n  | { type: 'SET_ALL'; features: { [key: string]: FeatureValue } }\n  | { type: 'SET'; name: string; value: FeatureValue }\n  | { type: 'TOGGLE'; name: string }\n  | { type: 'UNSET'; name: string };\n\nexport interface FeaturesTypeState {\n  value: 'ready';\n  context: FeaturesContext;\n}\n\nexport type FeaturesState = StateFrom<typeof FeaturesMachine>;\nexport type FeaturesDispatch = InterpreterFrom<typeof FeaturesMachine>['send'];\n\nexport function valueOfFeature(featuresState: FeaturesState, feature: string): [FeatureValue, boolean] {\n  if (featuresState.context.features[feature] == null) {\n    return [undefined, false];\n  }\n  const featureState = featuresState.context.features[feature].getSnapshot();\n  if (featureState != null) {\n    return valueForState(featureState);\n  }\n  return [undefined, false];\n}\n\n/// state machine that manages a set of features with user, org, and local overrides\nexport const FeaturesMachine = createMachine<FeaturesContext, FeaturesAction, FeaturesTypeState>({\n  id: 'features',\n  initial: 'idle',\n  predictableActionArguments: true,\n  context: {\n    features: {},\n  },\n  states: {\n    idle: {\n      on: {\n        INIT: {\n          target: 'ready',\n          cond: (_, e) => e.features.length > 0,\n          actions: assign({\n            features: (context, event) => {\n              const features: typeof context.features = {};\n\n              for (const feature of event.features) {\n                features[feature.name] = spawn(FeatureMachine, {\n                  name: feature.name,\n                  sync: true,\n                });\n                features[feature.name].send({ type: 'INIT', feature });\n              }\n              return features;\n            },\n          }),\n        },\n      },\n    },\n\n    // the features are loaded and ready to be used\n    ready: {\n      on: {\n        DE_INIT: { target: 'idle', actions: assign({ features: (_, __) => ({}) }) },\n        SET_ALL: {\n          actions: assign({\n            features: (ctx, e) => {\n              const features = { ...ctx.features };\n              // All configured features are set to on/off or undefined\n              Object.keys(features).forEach((name) => {\n                features[name].send({ type: 'SET', value: e.features[name] ?? undefined });\n              });\n              return features;\n            },\n          }),\n        },\n\n        // Set a feature to a value\n        SET: {\n          actions: (ctx, e) => {\n            const feature = ctx.features[e.name];\n            if (feature != null) {\n              feature.send({ type: 'SET', value: e.value });\n            }\n          },\n        },\n\n        // toggle a feature\n        TOGGLE: {\n          actions: (ctx, e) => {\n            const feature = ctx.features[e.name];\n            if (feature != null) {\n              feature.send({ type: 'TOGGLE' });\n            }\n          },\n        },\n\n        // when a feature is enabled, send the enable message to the actor\n        ENABLE: {\n          actions: (ctx, e) => {\n            const feature = ctx.features[e.name];\n            if (feature != null) {\n              feature.send({ type: 'ENABLE' });\n            }\n          },\n        },\n\n        // when a feature is disabled, send the disable message to the actor\n        DISABLE: {\n          actions: (ctx, e) => {\n            const feature = ctx.features[e.name];\n            if (feature != null) {\n              feature.send({ type: 'DISABLE' });\n            }\n          },\n        },\n\n        // when a feature is unset, send the unset message to the actor\n        UNSET: {\n          actions: (ctx, e) => {\n            const feature = ctx.features[e.name];\n            if (feature != null) {\n              feature.send({ type: 'UNSET' });\n            }\n          },\n        },\n      },\n    },\n  },\n});\n", "import { assign, createMachine, DoneInvokeEvent, InterpreterFrom, StateFrom } from 'xstate';\n\n/**\n * Feature is either on, off, or 'unset',\n * which means it will go to the default value or the less specific value.\n */\nexport type FeatureValue = false | true | undefined;\n\nexport type FeatureState = StateFrom<typeof FeatureMachine>;\nexport type FeatureDispatch = InterpreterFrom<typeof FeatureMachine>['send'];\n\n/// Given a featurestate, determine the value (on, off, or unset)\nexport function valueForState(featureState: FeatureState): [FeatureValue, boolean] {\n  return [\n    featureState.matches('enabled') ? true : featureState.matches('disabled') ? false : undefined,\n    featureState.context.featureDesc?.force ?? false,\n  ];\n}\n\n/**\n * Definition of a feature that can be enabled or disabled.\n * K is the type of the key that is used to identify the feature.\n */\nexport interface FeatureDescription<K extends string = string> {\n  readonly name: K;\n  readonly description?: string;\n\n  /// If set, will be used to update the feature default state instead of simply overriding.\n  /// For example, you might use this to update a feature flag on a backend server.\n  /// when set, the feature will be updated on the backend server, and the result of the async\n  /// will be used for the final state after the change. while changing, the feature will be\n  /// in the 'changing' state. Also note that the feature will be changed at the \"default\" layer.\n  readonly onChangeDefault?: (name: K, newValue: FeatureValue) => Promise<FeatureValue>;\n\n  /// if set true, will force the field to what it is set here through layers of states.\n  /// useful to invert the layers, similar to !important in CSS.\n  readonly force?: boolean;\n\n  /// If set to true, the feature will not be overridable by the user.\n  readonly noOverride?: boolean;\n\n  /// can be used to specify what should happen if the feature is not set to a particular value.\n  readonly defaultValue?: FeatureValue;\n}\n\ninterface FeatureContext {\n  featureDesc?: FeatureDescription;\n}\n\ntype FeatureTypeState =\n  | {\n      value: 'asyncDenabled';\n      context: FeatureContext;\n    }\n  | {\n      value: 'asyncDisabled';\n      context: FeatureContext;\n    }\n  | {\n      value: 'asyncUnspecied';\n      context: FeatureContext;\n    }\n  | {\n      value: 'disabled';\n      context: FeatureContext;\n    }\n  | {\n      value: 'enabled';\n      context: FeatureContext;\n    }\n  | {\n      value: 'initial';\n      context: never;\n    }\n  | {\n      value: 'unspecied';\n      context: FeatureContext;\n    };\n\n/**\n * Actions that can be performed on a feature.\n */\nexport type FeatureAction =\n  | { type: 'DISABLE' }\n  | { type: 'ENABLE' }\n  | { type: 'INIT'; feature: FeatureDescription }\n  | { type: 'SET'; value: FeatureValue }\n  | { type: 'TOGGLE' }\n  | { type: 'UNSET' };\n\n/**\n * Fully describe the states a feature can be in\n */\nexport const FeatureMachine = createMachine<FeatureContext, FeatureAction, FeatureTypeState>({\n  id: 'feature',\n  initial: 'initial',\n  context: {},\n  predictableActionArguments: true,\n  on: {\n    ENABLE: [\n      { target: 'asyncEnabled', cond: (ctx) => ctx.featureDesc?.onChangeDefault != null },\n      { target: 'enabled' },\n    ],\n\n    TOGGLE: [\n      { target: 'asyncEnabled', cond: (ctx) => ctx.featureDesc?.onChangeDefault != null },\n      { target: 'enabled' },\n    ],\n\n    DISABLE: [\n      { target: 'asyncDisabled', cond: (ctx) => ctx.featureDesc?.onChangeDefault != null },\n      { target: 'disabled' },\n    ],\n\n    UNSET: [\n      { target: 'asyncUnspecied', cond: (ctx) => ctx.featureDesc?.onChangeDefault != null },\n      { target: 'unspecified' },\n    ],\n\n    SET: [\n      {\n        target: 'asyncEnabled',\n        cond: (ctx, e) => e.value === true && ctx.featureDesc?.onChangeDefault != null,\n      },\n      {\n        target: 'asyncDisabled',\n        cond: (ctx, e) => e.value === false && ctx.featureDesc?.onChangeDefault != null,\n      },\n      {\n        target: 'asyncUnspecied',\n        cond: (ctx, _e) => ctx.featureDesc?.onChangeDefault != null,\n      },\n      {\n        target: 'enabled',\n        cond: (_ctx, e) => e.value === true,\n      },\n      {\n        target: 'disabled',\n        cond: (_ctx, e) => e.value === false,\n      },\n      { target: 'unspecified' },\n    ],\n  },\n\n  states: {\n    initial: {\n      on: {\n        INIT: [\n          {\n            actions: assign({ featureDesc: (_, e) => e.feature }),\n            target: 'enabled',\n            cond: (_, e) => e.feature.defaultValue === true,\n          },\n          {\n            actions: assign({ featureDesc: (_, e) => e.feature }),\n            target: 'unspecified',\n            cond: (_, e) => e.feature.defaultValue === undefined,\n          },\n          {\n            actions: assign({ featureDesc: (_, e) => e.feature }),\n            target: 'disabled',\n            cond: (_, e) => e.feature.defaultValue === false,\n          },\n        ],\n      },\n    },\n\n    unspecified: {},\n    disabled: {},\n    enabled: {},\n\n    asyncDisabled: {\n      invoke: {\n        id: 'set-off-upstream',\n        src: async (ctx) => {\n          const onchange = ctx.featureDesc?.onChangeDefault;\n          if (onchange != null && ctx.featureDesc != null) {\n            return onchange(ctx.featureDesc.name, false);\n          }\n          return undefined;\n        },\n        onDone: [\n          {\n            target: 'enabled',\n            cond: (_ctx, e: DoneInvokeEvent<FeatureValue>) => e.data === true,\n          },\n          {\n            target: 'disabled',\n            cond: (_ctx, e: DoneInvokeEvent<FeatureValue>) => e.data === false,\n          },\n          { target: 'unspecified' },\n        ],\n        onError: 'unspecified',\n      },\n    },\n\n    asyncUnspecied: {\n      invoke: {\n        id: 'set-unset-upstream',\n        src: async (ctx) => {\n          const onchange = ctx.featureDesc?.onChangeDefault;\n          if (onchange != null && ctx.featureDesc != null) {\n            return onchange(ctx.featureDesc.name, undefined);\n          }\n          return undefined;\n        },\n        onDone: [\n          {\n            target: 'enabled',\n            cond: (_ctx, e: DoneInvokeEvent<FeatureValue>) => e.data === true,\n          },\n          {\n            target: 'disabled',\n            cond: (_ctx, e: DoneInvokeEvent<FeatureValue>) => e.data === false,\n          },\n          { target: 'unspecified' },\n        ],\n        onError: 'unspecified',\n      },\n    },\n\n    asyncEnabled: {\n      invoke: {\n        id: 'set-on-upstream',\n        src: async (ctx) => {\n          const onchange = ctx.featureDesc?.onChangeDefault;\n          if (onchange != null && ctx.featureDesc != null) {\n            return onchange(ctx.featureDesc.name, true);\n          }\n          return undefined;\n        },\n        onDone: [\n          {\n            target: 'enabled',\n            cond: (_ctx, e: DoneInvokeEvent<FeatureValue>) => e.data === true,\n          },\n          {\n            target: 'disabled',\n            cond: (_ctx, e: DoneInvokeEvent<FeatureValue>) => e.data === false,\n          },\n          { target: 'unspecified' },\n        ],\n        onError: 'unspecified',\n      },\n    },\n  },\n});\n", "import React, { useMemo, ReactNode, useEffect, useRef } from 'react';\n\nimport { useMachine } from '@xstate/react';\n\nimport { EnableContext } from './EnableContext';\nimport { FeatureContext } from './FeatureContext';\nimport { FeaturesMachine } from './FeaturesState';\nimport { FeatureDescription } from './FeatureState';\nimport useConsoleOverride from './useConsoleOverride';\nimport usePersist, { KEY } from './usePersist';\nimport useTestCallback from './useTestCallback';\n\ninterface FeatureProps {\n  readonly features: readonly FeatureDescription[];\n  readonly children?: ReactNode;\n  readonly disableConsole?: boolean;\n  readonly storage?: Storage;\n}\n\n/**\n * A more batteries-enabled parent component that keeps track of feature state\n * internally, and creates window.feature.enable(\"f\") and window.feature.disable(\"f\").\n * Keeps track of overrides and defaults, with defaults potentially coming from your props\n * and overrides being persisted to your choice of storage layer.\n */\nexport function Features({\n  children,\n  features,\n  disableConsole = false,\n  storage = window.sessionStorage,\n}: FeatureProps): JSX.Element {\n  // Capture only first value; we don't care about future updates\n  const featuresRef = useRef(features);\n  const [overridesState, overridesSend] = useMachine(FeaturesMachine);\n  const [defaultsState, defaultsSend] = useMachine(FeaturesMachine);\n\n  useEffect(() => {\n    /// Load defaults\n    defaultsSend({ type: 'INIT', features });\n    return () => {\n      defaultsSend({ type: 'DE_INIT' });\n    };\n  }, [defaultsSend, features]);\n\n  useEffect(() => {\n    let f: Record<string, boolean | undefined> = {};\n    if (storage != null) {\n      try {\n        const featuresJson = storage.getItem(KEY);\n        if (featuresJson != null) {\n          const fh = JSON.parse(featuresJson);\n          f = fh.overrides;\n        }\n      } catch (e) {\n        // Can't parse or get or otherwise; ignore\n        console.error('error in localStorage', e);\n      }\n    }\n\n    overridesSend({\n      type: 'INIT',\n      features: featuresRef.current\n        .filter((x) => x.noOverride !== true)\n        .map((x) => ({ name: x.name, description: x.description, defaultValue: f?.[x.name] ?? undefined })),\n    });\n\n    return () => {\n      overridesSend({ type: 'DE_INIT' });\n    };\n  }, [featuresRef, overridesSend, storage]);\n\n  usePersist(storage, featuresRef.current, overridesState);\n\n  const testCallback = useTestCallback(overridesState, defaultsState);\n  useConsoleOverride(!disableConsole, featuresRef.current, testCallback, defaultsSend);\n\n  const featureValue = useMemo(\n    () => ({\n      overridesSend,\n      defaultsSend,\n      featuresDescription: featuresRef.current,\n      overridesState,\n      defaultsState,\n      test: testCallback,\n    }),\n    [overridesSend, defaultsSend, overridesState, defaultsState, testCallback]\n  );\n\n  return (\n    <FeatureContext.Provider value={featureValue}>\n      <EnableContext.Provider value={testCallback}>{children}</EnableContext.Provider>\n    </FeatureContext.Provider>\n  );\n}\n", "import { createContext } from 'react';\n\nimport { FeatureValue } from './FeatureState';\n\nexport type EnableContextType = (feature: string) => FeatureValue;\n\n/**\n * Contained function can check whether a given feature is enabled.\n */\nexport const EnableContext = createContext<EnableContextType>((_s) => false);\n", "import { createContext } from 'react';\n\nimport { FeaturesDispatch, FeaturesState } from './FeaturesState';\nimport { FeatureDescription, FeatureValue } from './FeatureState';\n\nexport const FeatureContext = createContext<FeatureContextType | null>(null);\n\n/// Give access to the overrides layer\nexport interface FeatureContextType {\n  // Make changes to the overrides\n  overridesSend: FeaturesDispatch;\n\n  // Make changes to defaults\n  defaultsSend: FeaturesDispatch;\n\n  featuresDescription: readonly FeatureDescription[];\n\n  // State is in layers; overrides and defaults\n  overridesState: FeaturesState;\n  defaultsState: FeaturesState;\n\n  /// Test with proper fallback and respecting the user's force preference\n  test: (flag: string) => FeatureValue;\n}\n", "import { useEffect } from 'react';\n\nimport { FeaturesDispatch } from './FeaturesState';\nimport { FeatureDescription, FeatureValue } from './FeatureState';\nimport { GlobalEnable } from './GlobalEnable';\n\nexport default function useConsoleOverride(\n  consoleOverride: boolean,\n  features: readonly FeatureDescription[],\n  testFeature: (_: string) => FeatureValue,\n  dispatch: FeaturesDispatch\n): void {\n  useEffect(() => {\n    if (!consoleOverride) {\n      return () => {\n        /* empty */\n      };\n    }\n    window.feature = new GlobalEnable(dispatch, testFeature, features);\n    return () => {\n      if (window.feature != null) {\n        delete window.feature;\n      }\n    };\n  }, [features, dispatch, consoleOverride, testFeature]);\n}\n", "import { FeaturesDispatch } from './FeaturesState';\nimport { FeatureDescription, FeatureValue } from './FeatureState';\n\nexport class GlobalEnable {\n  private readonly featureDesc: readonly FeatureDescription[];\n  private readonly dispatch: FeaturesDispatch;\n  private readonly testFeature: (value: string) => FeatureValue;\n\n  constructor(\n    dispatch: FeaturesDispatch,\n    testFeature: (_: string) => FeatureValue,\n    featureDesc: readonly FeatureDescription[]\n  ) {\n    this.featureDesc = featureDesc;\n    this.dispatch = dispatch;\n    this.testFeature = testFeature;\n  }\n\n  public toggle(feature: string): void {\n    this.dispatch({ type: 'TOGGLE', name: feature });\n  }\n\n  public enable(feature: string): void {\n    this.dispatch({ type: 'ENABLE', name: feature });\n  }\n\n  public unset(feature: string): void {\n    this.dispatch({ type: 'UNSET', name: feature });\n  }\n\n  public disable(feature: string): void {\n    this.dispatch({ type: 'DISABLE', name: feature });\n  }\n\n  public setAll(features: { [key: string]: FeatureValue }): void {\n    this.dispatch({ type: 'SET_ALL', features });\n  }\n\n  public listFeatures(): readonly [string, FeatureValue][] {\n    return this.featureDesc.map((f) => [f.name, this.testFeature(f.name)]);\n  }\n}\ndeclare global {\n  interface Window {\n    feature?: GlobalEnable;\n  }\n}\n", "import { useMemo, useEffect } from 'react';\n\nimport { FeaturesState, valueOfFeature } from './FeaturesState';\nimport { FeatureDescription, FeatureValue } from './FeatureState';\n\nexport const KEY = 'react-enable:feature-values';\n\nexport default function usePersist(\n  storage: Storage | undefined,\n  features: readonly FeatureDescription[],\n  overrideState: FeaturesState\n): void {\n  const overrides = useMemo(() => {\n    const newOverrides: { [key: string]: FeatureValue } = {};\n    if (overrideState.matches('ready')) {\n      for (const feature of features) {\n        const [value] = valueOfFeature(overrideState, feature.name);\n        if (value != null) {\n          newOverrides[feature.name] = value;\n        }\n      }\n    }\n    return newOverrides;\n  }, [features, overrideState]);\n\n  const strState = Object.keys(overrides).length === 0 || storage == null ? '{}' : JSON.stringify({ overrides });\n\n  useEffect(() => {\n    try {\n      if (storage != null && overrideState.matches('ready')) {\n        storage.setItem(KEY, strState);\n      }\n    } catch (e) {\n      // Can't set for some reason\n    }\n  }, [overrideState, storage, strState]);\n}\n", "import { useCallback } from 'react';\n\nimport { FeaturesState } from './FeaturesState';\nimport testFeature from './testFeature';\n\n/// A callback that can be called to test if a feature is enabled or disabled\nexport default function useTestCallback(\n  defaultsState: FeaturesState,\n  overridesState: FeaturesState\n): (feature: string) => boolean | undefined {\n  return useCallback((f: string) => testFeature(f, [defaultsState, overridesState]), [defaultsState, overridesState]);\n}\n", "import { FeaturesState, valueOfFeature } from './FeaturesState';\nimport { FeatureValue } from './FeatureState';\n\n/** Determine if the feature is enabled in one of the state machines, in order\n *\n * @param state The current state of the machine\n * @param feature The feature to check\n */\n\nexport default function testFeature(feature: string, states: FeaturesState[]): FeatureValue {\n  const values = states.map((state) => valueOfFeature(state, feature));\n\n  // look for best forced option, in order\n  for (const [featureValue, featureForced] of values) {\n    if (featureValue != null && featureForced) {\n      return featureValue;\n    }\n  }\n\n  // look for best non-forced option, in order\n  for (const [featureValue] of values) {\n    if (featureValue != null) {\n      return featureValue;\n    }\n  }\n\n  // unset if nothing hit\n  return undefined;\n}\n", "import * as React from 'react';\n\nimport { useAllEnabled } from './useAllEnabled';\nimport { useEnabled } from './useEnabled';\n\nexport interface EnableProps {\n  readonly feature?: string[] | string;\n  readonly allFeatures?: string[];\n  children: React.ReactNode;\n}\n\n/**\n * Feature will be enabled if any feature in the list are enabled,\n */\nexport function Enable({ feature = [], allFeatures = [], children }: EnableProps): JSX.Element | null {\n  const isAny = useEnabled(feature);\n  const isAll = useAllEnabled(allFeatures);\n\n  if (isAny || isAll) {\n    return <>{children}</>;\n  }\n\n  return null;\n}\n", "import { useContext, useMemo } from 'react';\n\nimport { EnableContextType, EnableContext } from './EnableContext';\n\n// Helper: get rid of some boilerplate.\n// just input mashing and sanitation, removing extra renders, and getting test function\nexport function useTestAndConvert(input?: string[] | string | null): [EnableContextType, string[]] {\n  const test = useContext(EnableContext);\n\n  // We memoize just to prevent re-renders since this could be at the leaf of a tree\n  const converted = useMemo(() => (input == null ? [] : Array.isArray(input) ? input : [input]), [input]);\n\n  return [test, converted];\n}\n", "import { useTestAndConvert } from './utils';\n\n/**\n * returns true iff all specified features are enabled\n */\nexport function useAllEnabled(allFeatures: string[] | string): boolean {\n  const [test, queryAllPresent] = useTestAndConvert(allFeatures);\n  return queryAllPresent.length > 0 && queryAllPresent.every(test);\n}\n", "import { useTestAndConvert } from './utils';\n\n/**\n * returns true iff any specified feature is enabled\n */\nexport function useEnabled(feature: string[] | string): boolean {\n  const [test, queryAnyPresent] = useTestAndConvert(feature);\n  return queryAnyPresent.some(test);\n}\n", "import * as React from \"react\";\n\nimport { EnableProps } from \"./Enable\";\nimport { useAllDisabled } from \"./useAllDisabled\";\nimport { useDisabled } from \"./useDisabled\";\n\n/**\n * Feature will be disabled if any in the list are enabled\n */\nexport const Disable: React.FC<EnableProps> = ({\n  feature = [],\n  allFeatures = [],\n  children\n}) => {\n  const isAny = useDisabled(feature);\n  const isAll = useAllDisabled(allFeatures);\n\n  if (isAny || isAll) {\n    return <>{children}</>;\n  }\n\n  return null;\n};\n", "import { useTestAndConvert } from './utils';\n\n/**\n * returns true iff all specified features are disabled\n */\nexport function useAllDisabled(withoutAll: string[] | string): boolean {\n  const [test, queryAllWithout] = useTestAndConvert(withoutAll);\n  return withoutAll.length > 0 && queryAllWithout.every((x) => !(test(x) ?? false));\n}\n", "import { useTestAndConvert } from './utils';\n\n/**\n * returns true iff any specified feature is disabled\n */\nexport function useDisabled(without: string[] | string): boolean {\n  const [test, queryAnyWithout] = useTestAndConvert(without);\n  return queryAnyWithout.some((x) => !(test(x) ?? false));\n}\n", "import React, { useContext, useState, useCallback, ReactNode } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { RadioGroup } from '@headlessui/react';\n\nimport { FeatureContext } from './FeatureContext';\nimport { valueOfFeature } from './FeaturesState';\nimport { FeatureDescription } from './FeatureState';\n// @ts-expect-error bundler will take care of this\nimport styles from './tailwind.css';\n\nfunction classNames(...classes: string[]): string {\n  return classes.filter(Boolean).join(' ');\n}\n\nfunction ToggleFeature({ feature }: { feature: FeatureDescription }): JSX.Element | null {\n  const context = useContext(FeatureContext);\n  const handleChangeSelection = useCallback(\n    (value: 'false' | 'true' | 'unset') => {\n      if (context?.overridesSend != null) {\n        switch (value) {\n          case 'true': {\n            context.overridesSend({ type: 'ENABLE', name: feature.name });\n            break;\n          }\n          case 'false': {\n            context.overridesSend({ type: 'DISABLE', name: feature.name });\n            break;\n          }\n          case 'unset': {\n            context.overridesSend({ type: 'UNSET', name: feature.name });\n            break;\n          }\n        }\n      }\n    },\n    [feature.name, context]\n  );\n\n  if (context == null) {\n    return null;\n  }\n\n  const { overridesState, test: testFeature, defaultsState } = context;\n\n  const valueInDefaults = (valueOfFeature(defaultsState, feature.name)[0] ?? 'unset').toString() as\n    | 'false'\n    | 'true'\n    | 'unset';\n\n  const valueInOverrides = (valueOfFeature(overridesState, feature.name)[0] ?? 'unset').toString() as\n    | 'false'\n    | 'true'\n    | 'unset';\n\n  const actualChecked = testFeature(feature.name);\n\n  return (\n    <RadioGroup disabled={feature.noOverride} onChange={handleChangeSelection} value={valueInOverrides}>\n      <RadioGroup.Label>\n        <h6 className=\"text-gray-900 align-center flex flex-row flex-nowrap items-center gap-2 lg:gap-4 h-7\">\n          <span className=\"font-medium\">\n            Feature: <code>{feature.name}</code>\n          </span>\n          {feature.noOverride === true ? (\n            <div className=\"border-orange-500 text-orange-500 flex flex-nowrap text-xs flex-row gap-1 rounded-sm border items-center justify-center px-2 py-1\">\n              <svg\n                aria-hidden=\"true\"\n                className=\"h-4 w-4 min-w-4\"\n                fill=\"currentColor\"\n                viewBox=\"0 0 20 20\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  clipRule=\"evenodd\"\n                  d=\"M5 9V7a5 5 0 0110 0v2a2 2 0 012 2v5a2 2 0 01-2 2H5a2 2 0 01-2-2v-5a2 2 0 012-2zm8-2v2H7V7a3 3 0 016 0z\"\n                  fillRule=\"evenodd\"\n                />\n              </svg>\n              <div>No Overrides</div>\n            </div>\n          ) : null}\n          {actualChecked === true ? (\n            <div className=\"flex flex-nowrap text-xs text-green-500 flex-row gap-1 rounded-sm border items-center justify-center border-green-500 px-2 py-1\">\n              <svg\n                aria-hidden=\"true\"\n                className=\"h-4 w-4 min-w-4\"\n                fill=\"currentColor\"\n                viewBox=\"0 0 20 20\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  clipRule=\"evenodd\"\n                  d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\"\n                  fillRule=\"evenodd\"\n                />\n              </svg>\n              <div>{actualChecked ? 'Enabled' : 'Disabled'}</div>\n            </div>\n          ) : null}\n        </h6>\n        {feature.description == null ? null : <p className=\"text-base text-gray-500 text-sm\">{feature.description}</p>}\n      </RadioGroup.Label>\n      <div className=\"mt-4 grid grid-cols-1 gap-y-6 sm:grid-cols-3 sm:gap-x-4\">\n        {[\n          { id: 'false', title: `Disable ${feature.name}`, description: 'Override the feature to be disabled' },\n          {\n            id: 'unset',\n            title: 'Default',\n            description: 'Inherit enabled state from defaults',\n            disabled: (feature.noOverride ?? false) || feature.force,\n            defaultValue:\n              valueInDefaults === 'true' ? (\n                <div className=\"text-green-500 border-green-500 flex flex-nowrap text-xs flex-row gap-1 rounded-sm border items-center justify-center px-2 py-1\">\n                  <span>Enabled</span>\n                </div>\n              ) : (\n                <div className=\"text-red-500 border-red-500 flex flex-nowrap text-xs flex-row gap-1 rounded-sm border items-center justify-center px-2 py-1\">\n                  <span>Disabled</span>\n                </div>\n              ),\n          },\n          { id: 'true', title: `Enable ${feature.name}`, description: 'Override the feature to be enabled' },\n        ].map((option) => (\n          <RadioGroup.Option\n            className={({ checked, active, disabled }) =>\n              classNames(\n                checked ? 'border-transparent' : 'border-gray-300',\n                !disabled && active ? 'border-blue-500 ring-2 ring-blue-500' : '',\n                disabled ? 'border-transparent ring-gray-500 cursor-not-allowed' : 'cursor-pointer',\n                'relative bg-white border rounded-lg shadow-sm p-3 flex focus:outline-none'\n              )\n            }\n            disabled={option.disabled}\n            key={option.id}\n            value={option.id}\n          >\n            {({ checked, active, disabled }) => (\n              <>\n                <div className=\"flex flex-col grow\">\n                  <RadioGroup.Label as=\"span\" className=\"flex flex-nowrap flex-row gap-1 items-center space-between\">\n                    <span className=\"text-sm font-medium text-gray-900 grow shrink\">{option.title}</span>\n                    {option.defaultValue != null ? option.defaultValue : null}\n                    <svg\n                      aria-hidden=\"true\"\n                      className={classNames(!checked ? 'invisible' : '', 'h-5 w-5 text-blue-500 min-w-4')}\n                      fill=\"currentColor\"\n                      viewBox=\"0 0 20 20\"\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                    >\n                      <path\n                        clipRule=\"evenodd\"\n                        d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\"\n                        fillRule=\"evenodd\"\n                      />\n                    </svg>\n                  </RadioGroup.Label>\n                  <RadioGroup.Description as=\"span\" className=\"mt-1 flex items-center text-sm text-gray-500\">\n                    {option.description}\n                  </RadioGroup.Description>\n                </div>\n                <div\n                  aria-hidden=\"true\"\n                  className={classNames(\n                    !disabled && active ? 'border' : 'border-2',\n                    checked ? (disabled ? 'border-gray-500' : 'border-blue-500') : 'border-transparent',\n                    'absolute -inset-px rounded-lg pointer-events-none'\n                  )}\n                />\n              </>\n            )}\n          </RadioGroup.Option>\n        ))}\n      </div>\n    </RadioGroup>\n  );\n}\n\nfunction ShadowContent({ root, children }: { children: ReactNode; root: Element }) {\n  return ReactDOM.createPortal(children, root);\n}\n\n/// Permit users to override feature flags via a GUI.\n/// Renders a small floating button in lower left or right, pressing it brings up\n/// a list of features to toggle and their current override state. you can override on or override off,\n/// or unset the override and go back to default value.\n// eslint-disable-next-line no-undef\nexport function ToggleFeatures({ defaultOpen = false, hidden = false }: { defaultOpen?: boolean; hidden?: boolean }): JSX.Element | null {\n  const [root, setCoreRoot] = useState<HTMLDivElement | null>(null);\n\n  const setRoot = (host: HTMLDivElement | null) => {\n    if (host == null || root != null) {\n      return;\n    }\n    const shadowRoot = host?.attachShadow({ mode: 'open' });\n    const style = document.createElement('style');\n    const renderDiv = document.createElement('div');\n    style.textContent = styles;\n    shadowRoot.appendChild(style);\n    shadowRoot.appendChild(renderDiv);\n    setCoreRoot(renderDiv);\n  };\n\n  if (hidden) {\n    return null;\n  }\n\n  return (\n    <div ref={setRoot} style={{ zIndex: 99999, position: 'fixed', width: '0', height: '0', bottom: 0 }}>\n      {root != null ? (\n        <ShadowContent root={root}>\n          <ToggleFeatureUnwrapped defaultOpen={defaultOpen} />\n        </ShadowContent>\n      ) : null}\n    </div>\n  );\n}\n\n/// Like ToggleFeatures, but does not inject styles into a shadow DOM root node.\n/// useful if you're using tailwind.\nexport function ToggleFeatureUnwrapped({ defaultOpen = false, hidden = false }: { defaultOpen?: boolean; hidden?: boolean }): JSX.Element | null {\n  const [open, setOpen] = useState(defaultOpen);\n  const context = useContext(FeatureContext);\n\n  if (context == null) {\n    return null;\n  }\n\n  if (hidden) {\n    return null;\n  }\n\n  // We want: Real value after all nestings, value of the override. we toggle override\n  const { featuresDescription } = context;\n\n  if (featuresDescription.length === 0) {\n    return null;\n  }\n\n  return (\n    <div className=\"relative\">\n      <div className=\"absolute bottom-0 left-0 mx-4 my-4\">\n        <button\n          className=\"inline-flex items-center text-sm font-medium p-1 h-8 w-8 align-middle cursor-pointer rounded-full bg-blue-600 text-white  border border-transparent justify-center text-base font-medium focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-600 sm:text-sm\"\n          onClick={() => setOpen(true)}\n          title=\"Toggle features\"\n          type=\"button\"\n        >\n          <svg\n            className=\"w-6 h-6 min-h-6 min-w-6\"\n            fill=\"currentColor\"\n            viewBox=\"0 0 20 20\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              clipRule=\"evenodd\"\n              d=\"M3 6a3 3 0 013-3h10a1 1 0 01.8 1.6L14.25 8l2.55 3.4A1 1 0 0116 13H6a1 1 0 00-1 1v3a1 1 0 11-2 0V6z\"\n              fillRule=\"evenodd\"\n            />\n          </svg>\n        </button>\n      </div>\n      {!open ? null : (\n        <div className=\"fixed z-10 inset-0 overflow-y-auto\">\n          <div className=\"flex items-end justify-flex-start mx-8 my-4 min-h-screen pt-4 px-4 pb-10 sm:block sm:p-0\">\n            <div className=\"relative inline-block align-bottom bg-white rounded-lg px-4 pt-5 pb-4 text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:p-6 lg:max-w-[80%] max-w-full\">\n              <div>\n                <div className=\"mt-1 sm:mt-3\">\n                  <h3 className=\"flex flex-row gap-4 flex-nowrap items-center space-between\">\n                    <div className=\"grow text-lg leading-6 font-medium text-gray-900\">Feature Flag Overrides</div>\n                  </h3>\n                  <p className=\"text-sm text-gray-500\">\n                    Features can be enabled or disabled unless they are forced upstream. You can also revert to default.\n                  </p>\n                  <div className=\"mt-6\">\n                    <fieldset className=\"flex flex-col gap-9\">\n                      <legend className=\"sr-only\">Feature Flags</legend>\n                      {featuresDescription.map((feature) => (\n                        <ToggleFeature feature={feature} key={feature.name} />\n                      ))}\n                    </fieldset>\n                  </div>\n                  <div className=\"flex justify-center items-center mt-5 sm:mt-6\">\n                    <button\n                      className=\"inline-flex items-center text-sm font-medium pt-0 pb-0 pr-4 pl-4 h-8 leading-7 align-middle cursor-pointer rounded-sm bg-blue-600 text-white border border-transparent justify-center text-base font-medium focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-600 sm:text-sm\"\n                      onClick={() => setOpen(false)}\n                      type=\"button\"\n                    >\n                      Done\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n"],
  "mappings": "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",
  "names": []
}
